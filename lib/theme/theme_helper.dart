import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  // A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    _appTheme = _newTheme;
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.whiteA700,
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: appTheme.teal40001,
            width: 2.h,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(16.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(8.h),
          ),
          shadowColor: appTheme.black900.withOpacity(0.25),
          elevation: 4,
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      checkboxTheme: CheckboxThemeData(
        fillColor: MaterialStateColor.resolveWith((states) {
          if (states.contains(MaterialState.selected)) {
            return colorScheme.primary;
          }
          return colorScheme.onSurface;
        }),
        side: BorderSide(
          width: 1,
        ),
        visualDensity: const VisualDensity(
          vertical: -4,
          horizontal: -4,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: appTheme.black900.withOpacity(0.42),
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.gray600,
          fontSize: 18.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w300,
        ),
        bodyMedium: TextStyle(
          color: appTheme.black900.withOpacity(0.7),
          fontSize: 13.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w300,
        ),
        bodySmall: TextStyle(
          color: appTheme.black900,
          fontSize: 10.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w300,
        ),
        displayMedium: TextStyle(
          color: appTheme.black900,
          fontSize: 45.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w700,
        ),
        displaySmall: TextStyle(
          color: appTheme.black900,
          fontSize: 35.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w700,
        ),
        headlineLarge: TextStyle(
          color: appTheme.black900,
          fontSize: 30.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w600,
        ),
        headlineMedium: TextStyle(
          color: appTheme.black900,
          fontSize: 29.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w800,
        ),
        headlineSmall: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 24.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w500,
        ),
        labelLarge: TextStyle(
          color: appTheme.black900.withOpacity(0.7),
          fontSize: 12.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w600,
        ),
        titleLarge: TextStyle(
          color: appTheme.black900,
          fontSize: 20.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w500,
        ),
        titleMedium: TextStyle(
          color: appTheme.black900,
          fontSize: 16.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w500,
        ),
        titleSmall: TextStyle(
          color: appTheme.black900.withOpacity(0.3),
          fontSize: 15.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w700,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0X2238E472),
    primaryContainer: Color(0XFFFF0000),
    secondaryContainer: Color(0X1E00EFFE),

    // Error colors
    errorContainer: Color(0X7020B185),
    onError: Color(0X1EBCFE00),

    // On colors(text colors)
    onPrimary: Color(0XFF1C274C),
    onPrimaryContainer: Color(0XFF040000),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amber500 => Color(0XFFF1C40F);
  Color get amber600 => Color(0XFFFBB305);

  // Black
  Color get black900 => Color(0XFF000000);

  // Blue
  Color get blueA200 => Color(0XFF4285F4);

  // BlueGray
  Color get blueGray100 => Color(0XFFD8D8CF);
  Color get blueGray10001 => Color(0XFFD9D9D9);
  Color get blueGray10002 => Color(0XFFCECECF);
  Color get blueGray400 => Color(0XFF64A792);
  Color get blueGray600 => Color(0XFF3E836E);
  Color get blueGray60001 => Color(0XFF3A8472);
  Color get blueGray900 => Color(0XFF2B3B47);

  // BlueGrayCc
  Color get blueGray100Cc => Color(0XCCD9D9D0);

  // BlueGrayc
  Color get blueGray4004c => Color(0X4C64A793);

  // BlueGrayE
  Color get blueGray600E5 => Color(0XE53E826E);

  // Cyan
  Color get cyan200 => Color(0XFF7BE8F7);
  Color get cyanA100 => Color(0XFF7BF0F7);
  Color get cyanA10001 => Color(0XFF7CF0F8);

  // Gray
  Color get gray400 => Color(0XFFC9BBBB);
  Color get gray600 => Color(0XFF777171);

  // Green
  Color get green200 => Color(0XFFB7C3A1);
  Color get green500 => Color(0XFF5ED240);
  Color get green50001 => Color(0XFF2DB059);
  Color get green600 => Color(0XFF34A853);
  Color get green700 => Color(0XFF2C9143);
  Color get green800 => Color(0XFF0C7D32);
  Color get greenA700 => Color(0XFF0CC00D);

  // GreenAe
  Color get greenA7001e => Color(0X1E00FE38);

  // Indigo
  Color get indigoA400 => Color(0XFF474DDC);

  // IndigoAe
  Color get indigoA7001e => Color(0X1E0047FF);
  Color get indigoA7001e01 => Color(0X1E0047FE);

  // Lime
  Color get lime800 => Color(0XFF978650);

  // Orange
  Color get orangeA100 => Color(0XFFF7D072);

  // Pink
  Color get pink100 => Color(0XFFFFC0CB);

  // PurpleAe
  Color get purpleA4001e => Color(0X1EFE00C6);

  // Red
  Color get red800 => Color(0XFFB02D2D);
  Color get redA100 => Color(0XFFF77B7B);

  // Teal
  Color get teal200 => Color(0XFF84E3C7);
  Color get teal30097 => Color(0X973CBF98);
  Color get teal400 => Color(0XFF459C82);
  Color get teal40001 => Color(0XFF469C82);

  // Tealf
  Color get teal3007f => Color(0X7F69B8A5);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
